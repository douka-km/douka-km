#!/usr/bin/env python3
"""
Script simple pour ajouter le param√®tre logo_url via une route admin
"""

def add_logo_setting_to_app(app, db, SiteSettings):
    """Fonction pour ajouter le param√®tre logo_url √† l'application"""
    
    @app.route('/admin/fix-logo-settings', methods=['GET'])
    def fix_logo_settings():
        """Route temporaire pour corriger les param√®tres du logo"""
        try:
            # V√©rifier si le param√®tre logo_url existe d√©j√†
            existing_logo = SiteSettings.query.filter_by(key='logo_url').first()
            
            if existing_logo:
                return f"""
                <h2>‚úÖ Logo Settings Status</h2>
                <p><strong>Logo URL existe d√©j√†:</strong> {existing_logo.value}</p>
                <p><strong>Description:</strong> {existing_logo.description or 'N/A'}</p>
                <p><strong>Cr√©√© le:</strong> {existing_logo.created_at}</p>
                <p><strong>Modifi√© le:</strong> {existing_logo.updated_at}</p>
                <br>
                <a href="/admin/dashboard">‚Üê Retour au dashboard admin</a>
                """
            
            # Cr√©er le param√®tre logo_url par d√©faut
            logo_setting = SiteSettings(
                key='logo_url',
                value='/static/img/logo.png',
                description='URL du logo principal du site'
            )
            
            # Ajouter √©galement le logo_alt_text
            logo_alt_setting = SiteSettings.query.filter_by(key='logo_alt_text').first()
            if not logo_alt_setting:
                logo_alt_setting = SiteSettings(
                    key='logo_alt_text',
                    value='DOUKA KM Logo',
                    description='Texte alternatif pour le logo'
                )
                db.session.add(logo_alt_setting)
            
            db.session.add(logo_setting)
            db.session.commit()
            
            return """
            <h2>‚úÖ Logo Settings Fixed!</h2>
            <p><strong>Logo URL ajout√©:</strong> """ + logo_setting.value + """</p>
            <p><strong>Description:</strong> """ + logo_setting.description + """</p>
            <p><strong>Logo Alt Text:</strong> """ + logo_alt_setting.value + """</p>
            <br>
            <p>üîÑ Le logo devrait maintenant appara√Ætre sur le site.</p>
            <p>‚ö†Ô∏è Supprimez cette route apr√®s utilisation pour des raisons de s√©curit√©.</p>
            <br>
            <a href="/admin/dashboard">‚Üê Retour au dashboard admin</a>
            <script>
                setTimeout(function() {
                    window.location.href = '/admin/dashboard';
                }, 5000);
            </script>
            """
            
        except Exception as e:
            db.session.rollback()
            return f"""
            <h2>‚ùå Erreur lors de la correction</h2>
            <p><strong>Erreur:</strong> {str(e)}</p>
            <br>
            <a href="/admin/dashboard">‚Üê Retour au dashboard admin</a>
            """
    
    @app.route('/admin/check-logo-settings', methods=['GET'])
    def check_logo_settings():
        """Route pour v√©rifier l'√©tat des param√®tres du logo"""
        try:
            # R√©cup√©rer tous les param√®tres
            all_settings = SiteSettings.query.all()
            settings_html = ""
            
            if all_settings:
                settings_html = "<ul>"
                for setting in all_settings:
                    settings_html += f"<li><strong>{setting.key}:</strong> {setting.value}</li>"
                settings_html += "</ul>"
            else:
                settings_html = "<p>Aucun param√®tre trouv√© dans la base de donn√©es</p>"
            
            # V√©rifier sp√©cifiquement le logo
            logo_setting = SiteSettings.query.filter_by(key='logo_url').first()
            logo_status = f"Logo URL: {logo_setting.value}" if logo_setting else "‚ùå Logo URL non trouv√©"
            
            return f"""
            <h2>üîß Logo Settings Status</h2>
            <p><strong>Status:</strong> {logo_status}</p>
            <p><strong>Nombre de param√®tres:</strong> {len(all_settings)}</p>
            <br>
            <h3>Tous les param√®tres:</h3>
            {settings_html}
            <br>
            <a href="/admin/dashboard">‚Üê Retour au dashboard admin</a>
            """
            
        except Exception as e:
            return f"""
            <h2>‚ùå Erreur lors de la v√©rification</h2>
            <p><strong>Erreur:</strong> {str(e)}</p>
            <br>
            <a href="/admin/dashboard">‚Üê Retour au dashboard admin</a>
            """

# Instructions d'utilisation
USAGE_INSTRUCTIONS = """
Pour utiliser ces routes, ajoutez ces lignes dans votre app_final_with_db.py :

# Importer la fonction
from fix_logo_route import add_logo_setting_to_app

# Apr√®s avoir cr√©√© l'app et configur√© la DB, ajouter les routes
add_logo_setting_to_app(app, db, SiteSettings)

Ensuite, visitez :
- /admin/check-logo-settings pour v√©rifier l'√©tat
- /admin/fix-logo-settings pour corriger le probl√®me

‚ö†Ô∏è Supprimez ces routes apr√®s utilisation pour la s√©curit√© !
"""

if __name__ == '__main__':
    print(USAGE_INSTRUCTIONS)
