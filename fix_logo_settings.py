#!/usr/bin/env python3
"""
Script pour ajouter le param√®tre logo_url dans la base de donn√©es
pour corriger le probl√®me de logo manquant sur render.com
"""

import os
import sys
from flask import Flask
from models import db, SiteSettings
from sqlalchemy.exc import IntegrityError

def create_app():
    """Cr√©er l'application Flask pour la configuration de la base de donn√©es"""
    app = Flask(__name__)
    
    # Configuration de la base de donn√©es
    database_url = os.getenv('DATABASE_URL')
    if database_url:
        # Production (PostgreSQL sur Render)
        if database_url.startswith('postgres://'):
            database_url = database_url.replace('postgres://', 'postgresql://')
        app.config['SQLALCHEMY_DATABASE_URI'] = database_url
    else:
        # Local (SQLite)
        app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///instance/douka_km.db'
    
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
    app.config['SECRET_KEY'] = os.getenv('SECRET_KEY', 'dev-key-for-logo-fix')
    
    db.init_app(app)
    return app

def add_default_logo_setting():
    """Ajouter le param√®tre logo_url par d√©faut"""
    app = create_app()
    
    with app.app_context():
        try:
            # V√©rifier si le param√®tre logo_url existe d√©j√†
            existing_logo = SiteSettings.query.filter_by(key='logo_url').first()
            
            if existing_logo:
                print(f"‚úÖ Le param√®tre logo_url existe d√©j√†: {existing_logo.value}")
                return True
            
            # Cr√©er le param√®tre logo_url par d√©faut
            logo_setting = SiteSettings(
                key='logo_url',
                value='/static/img/logo.png',
                description='URL du logo principal du site'
            )
            
            db.session.add(logo_setting)
            db.session.commit()
            
            print("‚úÖ Param√®tre logo_url ajout√© avec succ√®s: /static/img/logo.png")
            return True
            
        except IntegrityError as e:
            db.session.rollback()
            print(f"‚ö†Ô∏è Le param√®tre logo_url existe probablement d√©j√†: {e}")
            return True
        except Exception as e:
            db.session.rollback()
            print(f"‚ùå Erreur lors de l'ajout du param√®tre logo_url: {e}")
            return False

def check_all_site_settings():
    """Afficher tous les param√®tres du site pour diagnostic"""
    app = create_app()
    
    with app.app_context():
        try:
            settings = SiteSettings.query.all()
            print(f"üìã Nombre de param√®tres dans la base: {len(settings)}")
            
            if settings:
                print("\nüîß Param√®tres existants:")
                for setting in settings:
                    print(f"  - {setting.key}: {setting.value}")
            else:
                print("‚ö†Ô∏è Aucun param√®tre trouv√© dans la base de donn√©es")
                
            # V√©rifier sp√©cifiquement le logo
            logo_setting = SiteSettings.query.filter_by(key='logo_url').first()
            if logo_setting:
                print(f"\nüñºÔ∏è Logo URL trouv√©: {logo_setting.value}")
            else:
                print("\n‚ùå Aucun param√®tre logo_url trouv√©")
                
        except Exception as e:
            print(f"‚ùå Erreur lors de la v√©rification des param√®tres: {e}")

if __name__ == '__main__':
    print("üîß Script de correction du logo DOUKA KM")
    print("=" * 50)
    
    # V√©rifier l'√©tat actuel
    print("\n1Ô∏è‚É£ V√©rification de l'√©tat actuel...")
    check_all_site_settings()
    
    # Ajouter le param√®tre logo si n√©cessaire
    print("\n2Ô∏è‚É£ Ajout du param√®tre logo_url...")
    success = add_default_logo_setting()
    
    # V√©rifier le r√©sultat
    print("\n3Ô∏è‚É£ V√©rification apr√®s modification...")
    check_all_site_settings()
    
    if success:
        print("\n‚úÖ Script termin√© avec succ√®s!")
        print("üí° Le logo devrait maintenant appara√Ætre sur render.com")
        print("üîÑ Red√©marrez l'application sur Render si n√©cessaire")
    else:
        print("\n‚ùå Probl√®me lors de l'ex√©cution du script")
        sys.exit(1)
